name: Deploy to production on Release creation

on:
  push:
    branches:
      - develop
      - master

jobs:
  build:
    name: Build and store /dist
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      # - name: Read .nvmrc
      #   run: echo ::set-output name=NVMRC::$(cat .nvmrc)
      #   id: nvm

      # - name: Setup node
      #   uses: actions/setup-node@v1
      #   with:
      #     node-version: "${{ steps.nvm.outputs.NVMRC }}"

      - name: Install Dependencies
        run: npm ci

      - name: Build
        run: npm run build:prod

      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist

  deploy:
    name: Push Docker image
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      # - name: Get tag number
      #   id: tag
      #   run: echo ::set-output name=TAG::$(echo ${{ github.event.release.tag_name }} | tr -d v)

      - name: Download compiled files
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to GitHub Packages Docker Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      # - run: echo ${{steps.tag.outputs.TAG}}

      - name: Push to GitHub Packages
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ghcr.io/pablosproject/eshop-app:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Logout from docker
        run: docker logout

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.DISPATCH_PAT }}
          repository: pablosproject/eshop-devops
          event-type: package-published
